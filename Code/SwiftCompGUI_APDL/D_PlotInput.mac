!*************************************************************
! This file reads results from SwiftComp dehomogenizaiton,   *
! and input the results back into ANSYS to modify nodal and  *
! elemental solution.                                        *
!                                                            *
! written by: Fang Jiang                                     *
! Date: 2015                                                 *
!                                                            *
! Modified by: Banghua Zhao                                  *
! Date: 2016                                                 *
!*************************************************************

 
/prep7

/NOPR

*abset,'Postproc data processing',BAR

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 1
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

ALLSEL,ALL

DOF, UZ



!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
!Not 1DSG 
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*IF, C1DSG_flag, NE, 1, THEN

*DEL, NDisplacement
*DEL, ESS
*DEL, EStress
*DEL, EStrain
*DEL, ENode
*DEL, tempele

elemnode=0

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 2
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

*IF, nSG, EQ, 2, THEN
*DIM, ENode, ARRAY, nelem, 9 
*VREAD, ENode(1,1), elementfile, txt, ,JIK, 9, nelem
(19X,9F11.0) 
*DO, I, 1, nelem
	*Do, J, 1, 9
		! PROCESS BAR RETURNING FUNCTION
			jjjj=2+I*66/nelem
			*abcheck,jjjj
		! PROCESS BAR RETURNING FUNCTION
		*IF, ENode(I,J), NE, 0, THEN
			elemnode=elemnode+1
		*ENDIF
	*ENDDO
*ENDDO
*ENDIF

*IF, nSG, EQ, 3, THEN
*DIM, ENode, ARRAY, nelem, 20
*DIM, tempele, ARRAY, 2*nelem, 20 
*VREAD, tempele(1,1), elementfile, txt, ,JIK, 20, 2*nelem
(19X,20F11.0)
*DO, I, 1 ,nelem
	*DO, J, 1, 20
		! PROCESS BAR RETURNING FUNCTION
			jjjj=2+I*33/nelem
			*abcheck,jjjj
		! PROCESS BAR RETURNING FUNCTION
		ENode(I,J)=tempele(I*2-1,J)
	*ENDDO	
*ENDDO
*DO, I, 1, nelem
	*Do, J, 1, 20
		! PROCESS BAR RETURNING FUNCTION
			jjjj=35+I*33/nelem
			*abcheck,jjjj
		! PROCESS BAR RETURNING FUNCTION
		*IF, ENode(I,J), NE, 0, THEN
			elemnode=elemnode+1
		*ENDIF
	*ENDDO
*ENDDO
*ENDIF

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 68
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

*DIM, NDisplacement, ARRAY, nnode, 4
*DIM, ESS, ARRAY, elemnode, 15 
*DIM, EStress, ARRAY, elemnode, 6
*DIM, EStrain, ARRAY, elemnode, 6


*VREAD, NDisplacement(1,1), filename_sc(1), u, , JIK, 4, nnode
(f9.0, 3e15.11)

*IF, nSG, EQ, 2, Then
*VREAD, ESS(1,1), filename_sc(1), sn, , JIK, 14, elemnode
(' ', 14e15.11)
*DO, I, 1 ,elemnode
	! PROCESS BAR RETURNING FUNCTION
		jjjj=68+I*32/elemnode
		*abcheck,jjjj
	! PROCESS BAR RETURNING FUNCTION
	Estrain(I,1)= ESS(I,3)
	Estrain(I,2)= ESS(I,4)
	Estrain(I,3)= ESS(I,5)
	Estrain(I,4)= ESS(I,6)
	Estrain(I,5)= ESS(I,7)
	Estrain(I,6)= ESS(I,8)

	Estress(I,1)= ESS(I,9) 
	Estress(I,2)= ESS(I,10) 
	Estress(I,3)= ESS(I,11) 
	Estress(I,4)= ESS(I,12) 
	Estress(I,5)= ESS(I,13) 
	Estress(I,6)= ESS(I,14) 
*ENDDO
*ENDIF

*IF, nSG, EQ, 3, Then
*VREAD, ESS(1,1), filename_sc(1), sn, , JIK, 15, elemnode
(' ', 15e15.11)
*DO, I, 1 ,elemnode,
	! PROCESS BAR RETURNING FUNCTION
		jjjj=68+I*32/elemnode
		*abcheck,jjjj
	! PROCESS BAR RETURNING FUNCTION
	Estrain(I,1)= ESS(I,4)
	Estrain(I,2)= ESS(I,5)
	Estrain(I,3)= ESS(I,6)
	Estrain(I,4)= ESS(I,7)
	Estrain(I,5)= ESS(I,8)
	Estrain(I,6)= ESS(I,9)

	Estress(I,1)= ESS(I,10) 
	Estress(I,2)= ESS(I,11) 
	Estress(I,3)= ESS(I,12) 
	Estress(I,4)= ESS(I,13) 
	Estress(I,5)= ESS(I,14) 
	Estress(I,6)= ESS(I,15) 
*ENDDO
*ENDIF

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 100
*IF,jjjj,gt,99,then
	*ABFINI
*ENDIF
*ABFINISH
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

/POST1  
ALLSEL, ALL

*DEL, filename
*DEL, barstring_u
*DEL, barstring_sn
*DIM, filename, string, 200
*DIM, barstring_u, string, 200           ! string appears in the status bar
*DIM, barstring_sn, string, 200 
/inquire, filename(1), jobname

barstring_u(1)= 'Transfering'
barstring_u(Strleng(barstring_u(1))+2)=filename(1)
barstring_u(Strleng(barstring_u(1))+1)='.sc.u'
barstring_u(Strleng(barstring_u(1))+1)=' data'
barstring_sn(1)= 'Transfering'
barstring_sn(Strleng(barstring_sn(1))+2)=filename(1)
barstring_sn(Strleng(barstring_sn(1))+1)='.sc.sn'
barstring_sn(Strleng(barstring_sn(1))+1)=' data'

*abset,barstring_u(1),BAR

*CFOPEN, filename(1), sc
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 1, barstring_u(1)
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*DO, I, 1, nnode
	! PROCESS BAR RETURNING FUNCTION
		jjjj=1+I*24/nnode
		*abcheck,jjjj
	! PROCESS BAR RETURNING FUNCTION
	DNSOL, I, U, X, NDisplacement(I,2), , , , , ,
	DNSOL, I, U, Y, NDisplacement(I,3), , , , , ,
	DNSOL, I, U, Z, NDisplacement(I,4), , , , , ,
*ENDDO
	
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 25, barstring_sn(1)
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*IF, nSG, EQ, 2, THEN
sum=0
	*DO, I, 1, nelem
		! PROCESS BAR RETURNING FUNCTION
		jjjj=25+I*75/nelem
		*abcheck,jjjj
		*IF,jjjj,gt,99,then
			*ABFINI
		*ENDIF
		! PROCESS BAR RETURNING FUNCTION
		*DO, J, 1, 4
		 	*IF, ENode(I,J), NE, 0, THEN
		 		sum=sum+1
		 		! For SwiftComp 11, 22, 33, 23, 13, 12
		 		!                              X,              Y,              Z,              XY,             YZ,             XZ
		 		DESOL, I, ENode(I,J), S,    X, Estress(sum,1), Estress(sum,2), Estress(sum,3), Estress(sum,6), Estress(sum,4), Estress(sum,5),
				DESOL, I, ENode(I,J), EPEL, X, Estrain(sum,1), Estrain(sum,2), Estrain(sum,3), Estrain(sum,6), Estrain(sum,4), Estrain(sum,5),
			*ENDIF
		*ENDDO
		*IF, ENode(I,5), NE, 0, THEN      ! order 2 triangle
			sum=sum+3
			*IF, ENode(I,8), NE, 0, THEN    ! order 2 rectangle
				sum=sum+1
			*ENDIF
		*ENDIF
	*ENDDO
*ENDIF

*IF, nSG, EQ, 3, THEN
sum=0
	*DO, I, 1, nelem
		! PROCESS BAR RETURNING FUNCTION
		jjjj=25+I*75/nelem
		*abcheck,jjjj
		*IF,jjjj,gt,99,then
			*ABFINI
		*ENDIF
		! PROCESS BAR RETURNING FUNCTION
		*DO, J, 1, 5
		 	*IF, ENode(I,J), NE, 0, THEN
		 	    sum=sum+1
				DESOL, I, ENode(I,J), S,    X, Estress(sum,1), Estress(sum,2), Estress(sum,3), Estress(sum,6), Estress(sum,4), Estress(sum,5),
				DESOL, I, ENode(I,J), EPEL, X, Estrain(sum,1), Estrain(sum,2), Estrain(sum,3), Estrain(sum,6), Estrain(sum,4), Estrain(sum,5),
			*ENDIF
		*ENDDO
		*IF, ENode(I,5), EQ, 0, THEN   ! tetradedron
			*IF,  ENode(I,6), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,7), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,8), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,9), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,10), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,11), NE, 0, THEN
				sum=sum+1
			*ENDIF
		*ENDIF
		*IF, ENode(I,5), NE, 0, THEN   ! Block
			*DO, J, 6, 8
		 	    sum=sum+1
				DESOL, I, ENode(I,J), S,    X, Estress(sum,1), Estress(sum,2), Estress(sum,3), Estress(sum,6), Estress(sum,4), Estress(sum,5),
				DESOL, I, ENode(I,J), EPEL, X, Estrain(sum,1), Estrain(sum,2), Estrain(sum,3), Estrain(sum,6), Estrain(sum,4), Estrain(sum,5),
			*ENDDO
			*IF,  ENode(I,9), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,10), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,11), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,12), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,13), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,14), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,15), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,16), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,17), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,18), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,19), NE, 0, THEN
				sum=sum+1
			*ENDIF
			*IF,  ENode(I,20), NE, 0, THEN
				sum=sum+1
			*ENDIF
		*ENDIF
	*ENDDO
*ENDIF

*ENDIF
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

















!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
!1DSG 
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*IF, C1DSG_flag, EQ, 1, THEN

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
!1DSG for Plate/Shell Model
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*IF, Plate_flag, EQ, 1, THEN

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
!elementtype=5
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*if, elementtype, eq, 5, then

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 1
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/UIS,MSGPOP,3

*DO, i, 1, nnode
	N, i, 0, 0, NODE_X3(i)
	N, i+nnode, 0, 5*(t1+t2), NODE_X3(i)
*ENDDO

et,1,plane182

*DO, i ,1 , nnode-1
	E, i, i+1, i+nnode+1, i+nnode
*ENDDO

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 10
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

*DEL, NDisplacement
*DEL, ESS
*DEL, EStress
*DEL, EStrain
*DEL, Stress
*DEL, Strain

elemnode= 5*nelem

*DIM, NDisplacement, ARRAY, nnode, 4
*DIM, ESS, ARRAY, elemnode, 13 
*DIM, EStress, ARRAY, elemnode, 6
*DIM, EStrain, ARRAY, elemnode, 6
*DIM, Stress, ARRAY, elemnode, 6
*DIM, Strain, ARRAY, elemnode, 6

*VREAD, NDisplacement(1,1), filename_sc(1), u, , JIK, 4, nnode
(f9.0, 3e15.11)
*VREAD, ESS(1,1), filename_sc(1), sn, , JIK, 13, elemnode
(' ', 13e15.11)

*DEL, ENode
*DIM, ENode, ARRAY, nelem, 5
*VREAD, ENode(1,1), elementfile, txt, ,JIK, 5, nelem
(19X,5F11.0)

*DO, I, 1 ,elemnode
	Estrain(I,1)= ESS(I,2)
	Estrain(I,2)= ESS(I,3)
	Estrain(I,3)= ESS(I,4)
	Estrain(I,4)= ESS(I,5)
	Estrain(I,5)= ESS(I,6)
	Estrain(I,6)= ESS(I,7)

	Estress(I,1)= ESS(I,8) 
	Estress(I,2)= ESS(I,9) 
	Estress(I,3)= ESS(I,10) 
	Estress(I,4)= ESS(I,11) 
	Estress(I,5)= ESS(I,12) 
	Estress(I,6)= ESS(I,13) 
*ENDDO

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 40
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

*do, j, 1, 6
sum=0
	*do, i, 1, nelem
		sum=sum+1	
		stress(5*(i-1)+1,j)= Estress(sum,j)
		sum=sum+1
		stress(5*(i-1)+5,j)= Estress(sum,j)
		sum=sum+1
		stress(5*(i-1)+2,j)= Estress(sum,j)
		sum=sum+1
		stress(5*(i-1)+4,j)= Estress(sum,j)
		sum=sum+1
		stress(5*(i-1)+3,j)= Estress(sum,j)
	*enddo
*enddo

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 70
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

*do, j, 1, 6
sum=0
	*do, i, 1, nelem
		sum=sum+1	
		strain(5*(i-1)+1,j)= Estrain(sum,j)
		sum=sum+1
		strain(5*(i-1)+5,j)= Estrain(sum,j)
		sum=sum+1
		strain(5*(i-1)+2,j)= Estrain(sum,j)
		sum=sum+1
		strain(5*(i-1)+4,j)= Estrain(sum,j)
		sum=sum+1
		strain(5*(i-1)+3,j)= Estrain(sum,j)
	*enddo
*enddo

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 100
*IF,jjjj,gt,99,then
	*ABFINI
*ENDIF
*ABFINISH
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


/POST1  
ALLSEL, ALL

*DEL, filename
*DEL, barstring_u
*DEL, barstring_sn
*DIM, filename, string, 200
*DIM, barstring_u, string, 200           ! string appears in the status bar
*DIM, barstring_sn, string, 200 
/inquire, filename(1), jobname

barstring_u(1)= 'Transfering'
barstring_u(Strleng(barstring_u(1))+2)=filename(1)
barstring_u(Strleng(barstring_u(1))+1)='.sc.u '
barstring_u(Strleng(barstring_u(1))+1)=' data'
barstring_sn(1)= 'Transfering'
barstring_sn(Strleng(barstring_sn(1))+2)=filename(1)
barstring_sn(Strleng(barstring_sn(1))+1)='.sc.sn '
barstring_sn(Strleng(barstring_sn(1))+1)=' data'

*abset,barstring_u(1),BAR

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 1, barstring_u(1)
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*DO, I, 1, nnode
	! PROCESS BAR RETURNING FUNCTION
		jjjj=1+I*24/nnode
		*abcheck,jjjj
	! PROCESS BAR RETURNING FUNCTION
	DNSOL, I, U, X, NDisplacement(I,2), , , , , ,
	DNSOL, I, U, Y, NDisplacement(I,3), , , , , ,
	DNSOL, I, U, Z, NDisplacement(I,4), , , , , ,
	DNSOL, I+nnode, U, X, NDisplacement(I,2), , , , , ,
	DNSOL, I+nnode, U, Y, NDisplacement(I,3), , , , , ,
	DNSOL, I+nnode, U, Z, NDisplacement(I,4), , , , , ,
*ENDDO

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 25, barstring_sn(1)
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
sum=0
*DO, I, 1, nelem
	*Do,j,1,4
		temp=(i-1)*4+j
		temp1=(i-1)*5+j
		DESOL, temp, temp,         S, X, stress(temp1,1),   stress(temp1,2),   stress(temp1,3),   stress(temp1,6),   stress(temp1,4),   stress(temp1,5),
		DESOL, temp, temp+nnode,   S, X, stress(temp1,1),   stress(temp1,2),   stress(temp1,3),   stress(temp1,6),   stress(temp1,4),   stress(temp1,5),
		DESOL, temp, temp+1,       S, X, stress(temp1+1,1), stress(temp1+1,2), stress(temp1+1,3), stress(temp1+1,6), stress(temp1+1,4), stress(temp1+1,5),
		DESOL, temp, temp+nnode+1, S, X, stress(temp1+1,1), stress(temp1+1,2), stress(temp1+1,3), stress(temp1+1,6), stress(temp1+1,4), stress(temp1+1,5),
		
		DESOL, temp, temp,         EPEL, X, strain(temp1,1),   strain(temp1,2),   strain(temp1,3),   strain(temp1,6),   strain(temp1,4),   strain(temp1,5),
		DESOL, temp, temp+nnode,   EPEL, X, strain(temp1,1),   strain(temp1,2),   strain(temp1,3),   strain(temp1,6),   strain(temp1,4),   strain(temp1,5),
		DESOL, temp, temp+1,       EPEL, X, strain(temp1+1,1), strain(temp1+1,2), strain(temp1+1,3), strain(temp1+1,6), strain(temp1+1,4), strain(temp1+1,5),
		DESOL, temp, temp+nnode+1, EPEL, X, strain(temp1+1,1), strain(temp1+1,2), strain(temp1+1,3), strain(temp1+1,6), strain(temp1+1,4), strain(temp1+1,5),
	*enddo
*ENDDO

*endif

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
! End of elementtype=5
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
! elementtype=2
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*if, elementtype, eq, 2, then
/UIS,MSGPOP,3

*DO, i, 1, nnode
	N, i, 0, 0, NODE_X3(i)
	N, i+nnode, 0, 5*(t1+t2), NODE_X3(i)
*ENDDO

et,1,plane182

*DO, i ,1 , nnode-1
	E, i, i+1, i+nnode+1, i+nnode
*ENDDO

*DEL, NDisplacement
*DEL, ESS
*DEL, EStress
*DEL, EStrain
*DEL, Stress
*DEL, Strain

elemnode= 2*nelem

*DIM, NDisplacement, ARRAY, nnode, 4
*DIM, ESS, ARRAY, elemnode, 13 
*DIM, EStress, ARRAY, elemnode, 6
*DIM, EStrain, ARRAY, elemnode, 6
*DIM, Stress, ARRAY, nnode, 6
*DIM, Strain, ARRAY, nnode, 6

*VREAD, NDisplacement(1,1), filename_sc(1), u, , JIK, 4, nnode
(f9.0, 3e15.11)
*VREAD, ESS(1,1), filename_sc(1), sn, , JIK, 13, elemnode
(' ', 13e15.11)

*DO, I, 1, nelem
	strain(I,1)= ESS(I*2-1,2)
	strain(I,2)= ESS(I*2-1,3)
	strain(I,3)= ESS(I*2-1,4)
	strain(I,4)= ESS(I*2-1,5)
	strain(I,5)= ESS(I*2-1,6)
	strain(I,6)= ESS(I*2-1,7)

	stress(I,1)= ESS(I*2-1,8) 
	stress(I,2)= ESS(I*2-1,9) 
	stress(I,3)= ESS(I*2-1,10) 
	stress(I,4)= ESS(I*2-1,11) 
	stress(I,5)= ESS(I*2-1,12) 
	stress(I,6)= ESS(I*2-1,13) 
*ENDDO

strain(I,1)= ESS(elemnode,2)
strain(I,2)= ESS(elemnode,3)
strain(I,3)= ESS(elemnode,4)
strain(I,4)= ESS(elemnode,5)
strain(I,5)= ESS(elemnode,6)
strain(I,6)= ESS(elemnode,7)

stress(I,1)= ESS(elemnode,8) 
stress(I,2)= ESS(elemnode,9) 
stress(I,3)= ESS(elemnode,10)
stress(I,4)= ESS(elemnode,11)
stress(I,5)= ESS(elemnode,12)
stress(I,6)= ESS(elemnode,13)

/POST1  
ALLSEL, ALL

*DEL, filename
*DEL, barstring_u
*DEL, barstring_sn
*DIM, filename, string, 200
*DIM, barstring_u, string, 200           ! string appears in the status bar
*DIM, barstring_sn, string, 200 
/inquire, filename(1), jobname

barstring_u(1)= 'Transfering'
barstring_u(Strleng(barstring_u(1))+2)=filename(1)
barstring_u(Strleng(barstring_u(1))+1)='.sc.u '
barstring_u(Strleng(barstring_u(1))+1)=' data'
barstring_sn(1)= 'Transfering'
barstring_sn(Strleng(barstring_sn(1))+2)=filename(1)
barstring_sn(Strleng(barstring_sn(1))+1)='.sc.sn '
barstring_sn(Strleng(barstring_sn(1))+1)=' data'

*abset,barstring_u(1),BAR

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 1, barstring_u(1)
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*DO, I, 1, nnode
	! PROCESS BAR RETURNING FUNCTION
		jjjj=1+I*24/nnode
		*abcheck,jjjj
	! PROCESS BAR RETURNING FUNCTION
	DNSOL, I, U, X, NDisplacement(I,2), , , , , ,
	DNSOL, I, U, Y, NDisplacement(I,3), , , , , ,
	DNSOL, I, U, Z, NDisplacement(I,4), , , , , ,
	DNSOL, I+nnode, U, X, NDisplacement(I,2), , , , , ,
	DNSOL, I+nnode, U, Y, NDisplacement(I,3), , , , , ,
	DNSOL, I+nnode, U, Z, NDisplacement(I,4), , , , , ,
*ENDDO

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 25, barstring_sn(1)
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
sum=0
*DO, I, 1, nnode-1
	! PROCESS BAR RETURNING FUNCTION
		jjjj=25+I*75/(nnode-1)
		*abcheck,jjjj
		*IF,jjjj,gt,99,then
			*ABFINI
		*ENDIF
	! PROCESS BAR RETURNING FUNCTION
	DESOL, I, I,         S, X, stress(I,1),   stress(I,2),   stress(I,3),   stress(I,6),   stress(I,4),   stress(I,5),
	DESOL, I, I+nnode,   S, X, stress(I,1),   stress(I,2),   stress(I,3),   stress(I,6),   stress(I,4),   stress(I,5),
	DESOL, I, I+1,       S, X, stress(I+1,1), stress(I+1,2), stress(I+1,3), stress(I+1,6), stress(I+1,4), stress(I+1,5),
	DESOL, I, I+nnode+1, S, X, stress(I+1,1), stress(I+1,2), stress(I+1,3), stress(I+1,6), stress(I+1,4), stress(I+1,5),
	
	DESOL, I, I,         EPEL, X, strain(I,1),   strain(I,2),   strain(I,3),   strain(I,6),   strain(I,4),   strain(I,5),
	DESOL, I, I+nnode,   EPEL, X, strain(I,1),   strain(I,2),   strain(I,3),   strain(I,6),   strain(I,4),   strain(I,5),
	DESOL, I, I+1,       EPEL, X, strain(I+1,1), strain(I+1,2), strain(I+1,3), strain(I+1,6), strain(I+1,4), strain(I+1,5),
	DESOL, I, I+nnode+1, EPEL, X, strain(I+1,1), strain(I+1,2), strain(I+1,3), strain(I+1,6), strain(I+1,4), strain(I+1,5),
*ENDDO
*endif
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
! End of elementtype=2
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

*endif
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
! End of 1DSG for Plate/Shell Model
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
!1DSG for Solid Model
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*IF, Solid_flag, EQ, 1, then

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
!elementtype=5
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*if, elementtype, eq, 5, then

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 1
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/UIS,MSGPOP,3

/VIEW,1,1,1,1   
/ANG,1  
/REP,FAST
	
EPLOT
/NUMBER,1   
/PNUM,MAT,1 
/REPLOT

*DO, i, 1, nnode
	N, i, 0, 0, NODE_X3(i)
	N, i+nnode, 0, (t1+t2), NODE_X3(i)
	N, i+2*nnode, -(t1+t2), (t1+t2), NODE_X3(i)
	N, i+3*nnode, -(t1+t2), 0, NODE_X3(i)
*ENDDO

et,1,solid185

*DO, i ,1 , nnode-1
	E, i, i+nnode, i+2*nnode, i+3*nnode, i+1, i+nnode+1, i+2*nnode+1, i+3*nnode+1
*ENDDO

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 10
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

*DEL, NDisplacement
*DEL, ESS
*DEL, EStress
*DEL, EStrain
*DEL, Stress
*DEL, Strain

elemnode= 5*nelem

*DIM, NDisplacement, ARRAY, nnode, 4
*DIM, ESS, ARRAY, elemnode, 13 
*DIM, EStress, ARRAY, elemnode, 6
*DIM, EStrain, ARRAY, elemnode, 6
*DIM, Stress, ARRAY, nnode, 6
*DIM, Strain, ARRAY, nnode, 6

*VREAD, NDisplacement(1,1), filename_sc(1), u, , JIK, 4, nnode
(f9.0, 3e15.11)
*VREAD, ESS(1,1), filename_sc(1), sn, , JIK, 13, elemnode
(' ', 13e15.11)

*DEL, ENode
*DIM, ENode, ARRAY, nelem, 5
*VREAD, ENode(1,1), elementfile, txt, ,JIK, 5, nelem
(19X,5F11.0)

*DO, I, 1 ,elemnode
	Estrain(I,1)= ESS(I,2)
	Estrain(I,2)= ESS(I,3)
	Estrain(I,3)= ESS(I,4)
	Estrain(I,4)= ESS(I,5)
	Estrain(I,5)= ESS(I,6)
	Estrain(I,6)= ESS(I,7)

	Estress(I,1)= ESS(I,8) 
	Estress(I,2)= ESS(I,9) 
	Estress(I,3)= ESS(I,10) 
	Estress(I,4)= ESS(I,11) 
	Estress(I,5)= ESS(I,12) 
	Estress(I,6)= ESS(I,13) 
*ENDDO

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 40
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

*do, j, 1, 6
sum=0
	*do, i, 1, nelem
		sum=sum+1	
		stress(4*(i-1)+1,j)= Estress(sum,j)
		sum=sum+1
		stress(4*(i-1)+5,j)= Estress(sum,j)
		sum=sum+1
		stress(4*(i-1)+2,j)= Estress(sum,j)
		sum=sum+1
		stress(4*(i-1)+4,j)= Estress(sum,j)
		sum=sum+1
		stress(4*(i-1)+3,j)= Estress(sum,j)
	*enddo
*enddo

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 70
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

*do, j, 1, 6
sum=0
	*do, i, 1, nelem
		sum=sum+1	
		strain(4*(i-1)+1,j)= Estrain(sum,j)
		sum=sum+1
		strain(4*(i-1)+5,j)= Estrain(sum,j)
		sum=sum+1
		strain(4*(i-1)+2,j)= Estrain(sum,j)
		sum=sum+1
		strain(4*(i-1)+4,j)= Estrain(sum,j)
		sum=sum+1
		strain(4*(i-1)+3,j)= Estrain(sum,j)
	*enddo
*enddo

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 100
*IF,jjjj,gt,99,then
	*ABFINI
*ENDIF
*ABFINISH
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


/POST1  
ALLSEL, ALL

*DEL, filename
*DEL, barstring_u
*DEL, barstring_sn
*DIM, filename, string, 200
*DIM, barstring_u, string, 200           ! string appears in the status bar
*DIM, barstring_sn, string, 200 
/inquire, filename(1), jobname

barstring_u(1)= 'Transfering'
barstring_u(Strleng(barstring_u(1))+2)=filename(1)
barstring_u(Strleng(barstring_u(1))+1)='.sc.u '
barstring_u(Strleng(barstring_u(1))+1)=' data'
barstring_sn(1)= 'Transfering'
barstring_sn(Strleng(barstring_sn(1))+2)=filename(1)
barstring_sn(Strleng(barstring_sn(1))+1)='.sc.sn '
barstring_sn(Strleng(barstring_sn(1))+1)=' data'

*abset,barstring_u(1),BAR

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 1, barstring_u(1)
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*DO, I, 1, nnode
	! PROCESS BAR RETURNING FUNCTION
		jjjj=1+I*24/nnode
		*abcheck,jjjj
	! PROCESS BAR RETURNING FUNCTION
	DNSOL, I, U, X, NDisplacement(I,2), , , , , ,
	DNSOL, I, U, Y, NDisplacement(I,3), , , , , ,
	DNSOL, I, U, Z, NDisplacement(I,4), , , , , ,
	DNSOL, I+nnode, U, X, NDisplacement(I,2), , , , , ,
	DNSOL, I+nnode, U, Y, NDisplacement(I,3), , , , , ,
	DNSOL, I+nnode, U, Z, NDisplacement(I,4), , , , , ,
	DNSOL, I+2*nnode, U, X, NDisplacement(I,2), , , , , ,
	DNSOL, I+2*nnode, U, Y, NDisplacement(I,3), , , , , ,
	DNSOL, I+2*nnode, U, Z, NDisplacement(I,4), , , , , ,
	DNSOL, I+3*nnode, U, X, NDisplacement(I,2), , , , , ,
	DNSOL, I+3*nnode, U, Y, NDisplacement(I,3), , , , , ,
	DNSOL, I+3*nnode, U, Z, NDisplacement(I,4), , , , , ,
*ENDDO

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 25, barstring_sn(1)
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
sum=0
*DO, I, 1, nnode-1
	! PROCESS BAR RETURNING FUNCTION
		jjjj=25+I*75/(nnode-1)
		*abcheck,jjjj
		*IF,jjjj,gt,99,then
			*ABFINI
		*ENDIF
	! PROCESS BAR RETURNING FUNCTION
	DESOL, I, I,           S, X, stress(I,1),   stress(I,2),   stress(I,3),   stress(I,6),   stress(I,4),   stress(I,5),
	DESOL, I, I+nnode,     S, X, stress(I,1),   stress(I,2),   stress(I,3),   stress(I,6),   stress(I,4),   stress(I,5),
	DESOL, I, I+2*nnode,   S, X, stress(I,1),   stress(I,2),   stress(I,3),   stress(I,6),   stress(I,4),   stress(I,5),
	DESOL, I, I+3*nnode,   S, X, stress(I,1),   stress(I,2),   stress(I,3),   stress(I,6),   stress(I,4),   stress(I,5),
	DESOL, I, I+1,         S, X, stress(I+1,1), stress(I+1,2), stress(I+1,3), stress(I+1,6), stress(I+1,4), stress(I+1,5),
	DESOL, I, I+nnode+1,   S, X, stress(I+1,1), stress(I+1,2), stress(I+1,3), stress(I+1,6), stress(I+1,4), stress(I+1,5),
	DESOL, I, I+2*nnode+1, S, X, stress(I+1,1), stress(I+1,2), stress(I+1,3), stress(I+1,6), stress(I+1,4), stress(I+1,5),
	DESOL, I, I+3*nnode+1, S, X, stress(I+1,1), stress(I+1,2), stress(I+1,3), stress(I+1,6), stress(I+1,4), stress(I+1,5),
	
	DESOL, I, I,           EPEL, X, strain(I,1),   strain(I,2),   strain(I,3),   strain(I,6),   strain(I,4),   strain(I,5),
	DESOL, I, I+nnode,     EPEL, X, strain(I,1),   strain(I,2),   strain(I,3),   strain(I,6),   strain(I,4),   strain(I,5),
	DESOL, I, I+2*nnode,   EPEL, X, strain(I,1),   strain(I,2),   strain(I,3),   strain(I,6),   strain(I,4),   strain(I,5),
	DESOL, I, I+3*nnode,   EPEL, X, strain(I,1),   strain(I,2),   strain(I,3),   strain(I,6),   strain(I,4),   strain(I,5),
	DESOL, I, I+1,         EPEL, X, strain(I+1,1), strain(I+1,2), strain(I+1,3), strain(I+1,6), strain(I+1,4), strain(I+1,5),
	DESOL, I, I+nnode+1,   EPEL, X, strain(I+1,1), strain(I+1,2), strain(I+1,3), strain(I+1,6), strain(I+1,4), strain(I+1,5),
	DESOL, I, I+2*nnode+1, EPEL, X, strain(I+1,1), strain(I+1,2), strain(I+1,3), strain(I+1,6), strain(I+1,4), strain(I+1,5),
	DESOL, I, I+3*nnode+1, EPEL, X, strain(I+1,1), strain(I+1,2), strain(I+1,3), strain(I+1,6), strain(I+1,4), strain(I+1,5),
*ENDDO

*endif
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
!End of elementtype=5
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
!elementtype=2
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*if, elementtype, eq, 2, then
/UIS,MSGPOP,3

/VIEW,1,1,1,1   
/ANG,1  
/REP,FAST
	
EPLOT
/NUMBER,1   
/PNUM,MAT,1 
/REPLOT

*DO, i, 1, nnode
	N, i, 0, 0, NODE_X3(i)
	N, i+nnode, 0, (t1+t2), NODE_X3(i)
	N, i+2*nnode, -(t1+t2), (t1+t2), NODE_X3(i)
	N, i+3*nnode, -(t1+t2), 0, NODE_X3(i)
*ENDDO

et,1,solid185

*DO, i ,1 , nnode-1
	E, i, i+nnode, i+2*nnode, i+3*nnode, i+1, i+nnode+1, i+2*nnode+1, i+3*nnode+1
*ENDDO

*DEL, NDisplacement
*DEL, ESS
*DEL, EStress
*DEL, EStrain
*DEL, Stress
*DEL, Strain

elemnode= 2*nelem

*DIM, NDisplacement, ARRAY, nnode, 4
*DIM, ESS, ARRAY, elemnode, 13 
*DIM, EStress, ARRAY, elemnode, 6
*DIM, EStrain, ARRAY, elemnode, 6
*DIM, Stress, ARRAY, nnode, 6
*DIM, Strain, ARRAY, nnode, 6

*VREAD, NDisplacement(1,1), filename_sc(1), u, , JIK, 4, nnode
(f9.0, 3e15.11)
*VREAD, ESS(1,1), filename_sc(1), sn, , JIK, 13, elemnode
(' ', 13e15.11)


*DO, i, 1, nelem
	stress(I,1)= ESS(2*i-1,2)
	strain(I,2)= ESS(2*i-1,3)
	strain(I,3)= ESS(2*i-1,4)
	strain(I,4)= ESS(2*i-1,5)
	strain(I,5)= ESS(2*i-1,6)
	strain(I,6)= ESS(2*i-1,7)

	stress(I,1)= ESS(2*i-1,8) 
	stress(I,2)= ESS(2*i-1,9) 
	stress(I,3)= ESS(2*i-1,10) 
	stress(I,4)= ESS(2*i-1,11) 
	stress(I,5)= ESS(2*i-1,12) 
	stress(I,6)= ESS(2*i-1,13) 
*ENDDO
stress(I,1)= ESS(elemnode,2)
strain(I,2)= ESS(elemnode,3)
strain(I,3)= ESS(elemnode,4)
strain(I,4)= ESS(elemnode,5)
strain(I,5)= ESS(elemnode,6)
strain(I,6)= ESS(elemnode,7)

stress(I,1)= ESS(elemnode,8) 
stress(I,2)= ESS(elemnode,9) 
stress(I,3)= ESS(elemnode,10) 
stress(I,4)= ESS(elemnode,11) 
stress(I,5)= ESS(elemnode,12) 
stress(I,6)= ESS(elemnode,13) 

/POST1  
ALLSEL, ALL

*DEL, filename
*DEL, barstring_u
*DEL, barstring_sn
*DIM, filename, string, 200
*DIM, barstring_u, string, 200           ! string appears in the status bar
*DIM, barstring_sn, string, 200 
/inquire, filename(1), jobname

barstring_u(1)= 'Transfering'
barstring_u(Strleng(barstring_u(1))+2)=filename(1)
barstring_u(Strleng(barstring_u(1))+1)='.sc.u '
barstring_u(Strleng(barstring_u(1))+1)=' data'
barstring_sn(1)= 'Transfering'
barstring_sn(Strleng(barstring_sn(1))+2)=filename(1)
barstring_sn(Strleng(barstring_sn(1))+1)='.sc.sn '
barstring_sn(Strleng(barstring_sn(1))+1)=' data'

*abset,barstring_u(1),BAR

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 1, barstring_u(1)
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*DO, I, 1, nnode
	! PROCESS BAR RETURNING FUNCTION
		jjjj=1+I*24/nnode
		*abcheck,jjjj
	! PROCESS BAR RETURNING FUNCTION
	DNSOL, I, U, X, NDisplacement(I,2), , , , , ,
	DNSOL, I, U, Y, NDisplacement(I,3), , , , , ,
	DNSOL, I, U, Z, NDisplacement(I,4), , , , , ,
	DNSOL, I+nnode, U, X, NDisplacement(I,2), , , , , ,
	DNSOL, I+nnode, U, Y, NDisplacement(I,3), , , , , ,
	DNSOL, I+nnode, U, Z, NDisplacement(I,4), , , , , ,
	DNSOL, I+2*nnode, U, X, NDisplacement(I,2), , , , , ,
	DNSOL, I+2*nnode, U, Y, NDisplacement(I,3), , , , , ,
	DNSOL, I+2*nnode, U, Z, NDisplacement(I,4), , , , , ,
	DNSOL, I+3*nnode, U, X, NDisplacement(I,2), , , , , ,
	DNSOL, I+3*nnode, U, Y, NDisplacement(I,3), , , , , ,
	DNSOL, I+3*nnode, U, Z, NDisplacement(I,4), , , , , ,
*ENDDO

!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*abcheck, 25, barstring_sn(1)
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
sum=0
*DO, I, 1, nnode-1
	! PROCESS BAR RETURNING FUNCTION
		jjjj=25+I*75/(nnode-1)
		*abcheck,jjjj
		*IF,jjjj,gt,99,then
			*ABFINI
		*ENDIF
	! PROCESS BAR RETURNING FUNCTION
	DESOL, I, I,           S, X, stress(I,1),   stress(I,2),   stress(I,3),   stress(I,6),   stress(I,4),   stress(I,5),
	DESOL, I, I+nnode,     S, X, stress(I,1),   stress(I,2),   stress(I,3),   stress(I,6),   stress(I,4),   stress(I,5),
	DESOL, I, I+2*nnode,   S, X, stress(I,1),   stress(I,2),   stress(I,3),   stress(I,6),   stress(I,4),   stress(I,5),
	DESOL, I, I+3*nnode,   S, X, stress(I,1),   stress(I,2),   stress(I,3),   stress(I,6),   stress(I,4),   stress(I,5),
	DESOL, I, I+1,         S, X, stress(I+1,1), stress(I+1,2), stress(I+1,3), stress(I+1,6), stress(I+1,4), stress(I+1,5),
	DESOL, I, I+nnode+1,   S, X, stress(I+1,1), stress(I+1,2), stress(I+1,3), stress(I+1,6), stress(I+1,4), stress(I+1,5),
	DESOL, I, I+2*nnode+1, S, X, stress(I+1,1), stress(I+1,2), stress(I+1,3), stress(I+1,6), stress(I+1,4), stress(I+1,5),
	DESOL, I, I+3*nnode+1, S, X, stress(I+1,1), stress(I+1,2), stress(I+1,3), stress(I+1,6), stress(I+1,4), stress(I+1,5),
	
	DESOL, I, I,           EPEL, X, strain(I,1),   strain(I,2),   strain(I,3),   strain(I,6),   strain(I,4),   strain(I,5),
	DESOL, I, I+nnode,     EPEL, X, strain(I,1),   strain(I,2),   strain(I,3),   strain(I,6),   strain(I,4),   strain(I,5),
	DESOL, I, I+2*nnode,   EPEL, X, strain(I,1),   strain(I,2),   strain(I,3),   strain(I,6),   strain(I,4),   strain(I,5),
	DESOL, I, I+3*nnode,   EPEL, X, strain(I,1),   strain(I,2),   strain(I,3),   strain(I,6),   strain(I,4),   strain(I,5),
	DESOL, I, I+1,         EPEL, X, strain(I+1,1), strain(I+1,2), strain(I+1,3), strain(I+1,6), strain(I+1,4), strain(I+1,5),
	DESOL, I, I+nnode+1,   EPEL, X, strain(I+1,1), strain(I+1,2), strain(I+1,3), strain(I+1,6), strain(I+1,4), strain(I+1,5),
	DESOL, I, I+2*nnode+1, EPEL, X, strain(I+1,1), strain(I+1,2), strain(I+1,3), strain(I+1,6), strain(I+1,4), strain(I+1,5),
	DESOL, I, I+3*nnode+1, EPEL, X, strain(I+1,1), strain(I+1,2), strain(I+1,3), strain(I+1,6), strain(I+1,4), strain(I+1,5),
*ENDDO

*endif
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
!End of elementtype= 2
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

*ENDIF
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
!End of 1DSG for Solid Model
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

*ENDIF
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
!End of C1DSG
!++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

! Choose view angle according to analysis type
*if, nSG, eq, 1, then
	! Plate/Shell Model
	*if, Plate_flag, eq, 1, then
		/VIEW,1,1,0,0   
		/VUP,1,Z
	*endif
	
	! Solid Model
	*if, Solid_flag, eq, 1, then
		/VIEW,1,1,1,1  
	*endif
*endif

*if, nSG, eq, 2, then
	/VIEW,1,1,0,0   
	/VUP,1,Z 
	/Title, 2D Structure Genome
*endif

*if, nSG, eq, 3, then
	/VIEW,1,1,1,1  
	/Title, 3D Structure Genome
*endif


*ABFINISH

RSYS,SOLU   ! activate the elemental local coordinate which is actually the beam coordinate from VABS
/DSCALE,ALL,OFF
/EFACET,1
PLNSOL, U,SUM, 0,1.0


*MSG,UI
Postproc data processing is finished! %/&

/GOPR




