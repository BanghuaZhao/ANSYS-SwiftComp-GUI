!******************************************************
! Create HoneyComb Structure Genome                   *
!                                                     *
! written by: Banghua Zhao                            *
! Date: 2017                                          *
!                                                     * 
!******************************************************

/prep7  
/NOPR

! Check Material Model
*Get, test, MAT, 0, COUNT
*IF, test, eq, 0, THEN
*MSG, ERROR
No Material Model found. %/&
Please create Material Model!
/EOF
*ENDIF

! Check keypoints
*GET, test, kp, 0, COUNT
*IF, test, ne, 0, THEN
*MSG, ERROR
Please creat a new file to carry on analysis!
/EOF
*ENDIF

! Check lines
*GET, test, line, 0, COUNT
*IF, test, ne, 0, THEN
*MSG, ERROR
Please creat a new file to carry on analysis!
/EOF
*ENDIF

! Check areas
*GET, test, area, 0, COUNT
*IF, test, ne, 0, THEN
*MSG, ERROR
Please creat a new file to carry on analysis!
/EOF
*ENDIF

! Check volumes
*GET, test, volu, 0, COUNT
*IF, test, ne, 0, THEN
*MSG, ERROR
Please creat a new file to carry on analysis!
/EOF
*ENDIF

! Check nodes
*GET, test, NODE, 0, COUNT
*IF, test, ne, 0, THEN
*MSG, ERROR
Please creat a new file to carry on analysis!
/EOF
*ENDIF

! Check elements
*GET, test, ELEM, 0, COUNT
*IF, test, ne, 0, THEN
*MSG, ERROR
Please creat a new file to carry on analysis!
/EOF
*ENDIF

nSG = 3
/rgb,index,100,100,100, 0   
/rgb,index,80,80,80,13   
/rgb,index,60,60,60,14   
/rgb,index,0,0,0,15
/angle,1,-120,zs
/view,1,1,1,1
/NUMBER,1   
/PNUM,MAT,1 
/REPLOT
seltol,1e-6
Pi=atan(1)*4

! Core information
!---------------------------------
matcore=ARG1
l1= ARG2     ! mm
l2= ARG3
tc= ARG4
theta= ARG5     ! degree
hc = ARG6
walltype= ARG7

sint=sin(Pi*theta/180)
cost=cos(Pi*theta/180)
tant=tan(Pi*theta/180)
cott=tan(Pi*(90-theta)/180)

! Top face sheet information
!---------------------------------
mattop=ARG8
ttop=AR10

*DEL, layup1
*DEL, layupm1
*DEL, layupa1
*DEL, layupt1         

*DIM, layup1, String, 200
*DIM, layupm1, ARRAY, 10000     ! Store layup material
*DIM, layupa1, ARRAY, 10000     ! Store layup angle
*DIM, layupt1, ARRAY, 10000

layup1(1) = ARG9

L= Strleng(layup1(1))

*IF, L, ne, 0, then

e= Strpos(layup1(1),']')
s= Strpos(layup1(1),'s')
*IF, s, NE, 0, THEN
m= Valchr(Strsub(layup1(1),e+1,s-(e+1)))
n= Valchr(Strsub(layup1(1),s+1,L-s))
*ELSE
m= Valchr(Strsub(layup1(1),e+1,L-e))
*ENDIF

! Check the layup format
input_left= Strsub(layup1(1),1,1)
input_right= Strsub(layup1(1),e,1)
*IF, input_left, ne,'[', or, input_right, ne,']', THEN
*MSG,ERROR
Layup format is wrong,%/&
Please recheck and carry on analysis!
/EOF
*ENDIF
			
sum=0
temp=strpos(layup1(1),']')
L= Strleng(layup1(1))
layup1(1)=strsub(layup1(1),2,L)
*dowhile, temp
	L= Strleng(layup1(1))
	pos= strpos(layup1(1),'/')
	sum=sum+1
	*if, pos, gt, 0 ,then
		layupa1(sum)=valchr(strsub(layup1(1),1, pos-1))
	*endif
	*if, pos, eq, 0, then
		pos= strpos(layup1(1),']')
		layupa1(sum)=valchr(strsub(layup1(1),1, pos-1))
	*endif
	layup1(1)=strsub(layup1(1),pos+1,L)
	temp=strpos(layup1(1),']')	
*enddo
	
layupn1= sum      !total # of layup (total # of lamina)
*IF, m, EQ, 0, THEN
	m=1
*ENDIF
*IF, n, EQ, 0, THEN
	n=1
*ENDIF

! Repetition before symmetry
*IF, m, GT, 1, THEN
	*DO, i, 1, m-1
		*DO, j, 1, layupn1
			layupa1(j+i*layupn1)= layupa1(j)  ! Array to store layup angle from 1 to layupn
		*ENDDO
	*ENDDO
	layupn1= layupn1*m
*ENDIF

! Symmetry
*IF, s, NE, 0, THEN
	*DO, i, 1, layupn1
		layupa1(i+layupn1)= layupa1(layupn1-(i-1))  
	*ENDDO
	layupn1= layupn1*2
*ENDIF

! Repetition after symmetry
*IF, n, GT, 1, THEN
	*DO, i, 1, n-1
		*DO, j, 1, layupn1
			layupa1(j+i*layupn1)= layupa1(j)  ! Array to store layup angle from 1 to layupn
		*ENDDO
	*ENDDO
	layupn1= layupn1*n
*ENDIF

*DO, i, 1, layupn1
	layupm1(i)= mattop
	layupt1(i)= ttop
*ENDDO

*get, E1,  EX,   mattop
*get, E2,  EY,   mattop
*get, E3,  EZ,   mattop	
*get, G13, GXZ,  mattop
*get, G12, GXY,  mattop
*get, G23, GYZ,  mattop
*get, v12, PRXY, mattop
*get, v13, PRXZ, mattop
*get, v23, PRYZ, mattop
*get, rho, DENS, mattop

*DEL, compliance1   
*DEL, stiffness1  
*DIM, compliance1 , ARRAY, 6,6
*DIM, stiffness1 , ARRAY, 6,6

*do, i, 1, 6
	*do, j, 1, 6
		compliance1(i,j)=0
	*enddo
*enddo
compliance1(1,1)=1/E1
compliance1(2,2)=1/E2
compliance1(3,3)=1/E3
compliance1(1,2)=-v12/E1
compliance1(1,3)=-v13/E1
compliance1(2,3)=-v23/E2
compliance1(2,1)=compliance1(1,2)
compliance1(3,1)=compliance1(1,3)
compliance1(3,2)=compliance1(2,3)
compliance1(4,4)=1/G23
compliance1(5,5)=1/G13
compliance1(6,6)=1/G12

*moper,stiffness1,compliance1,invert

*do, i, 1, layupn1

	*DEL, Rsigma1
	*DEL, RsigmaT1
	*DEL, stiffnessp1
	*DIM, Rsigma1, ARRAY, 6,6
	*DIM, RsigmaT1, ARRAY, 6,6
	*DIM, stiffnessp1, ARRAY, 6,6
	
	*do, j, 1, 6
		*do, kk, 1, 6
			Rsigma1(j,kk)=0
		*enddo
	*enddo
	
	cc=cos(Pi*layupa1(i)/180)
	ss=sin(Pi*layupa1(i)/180)
	
	Rsigma1(1,1)=cc*cc
	Rsigma1(1,2)=ss*ss
	Rsigma1(1,6)=-2*ss*cc
	Rsigma1(2,1)=ss*ss
	Rsigma1(2,2)=cc*cc
	Rsigma1(2,6)=2*ss*cc
	Rsigma1(3,3)=1
	Rsigma1(4,4)=cc
	Rsigma1(4,5)=ss
	Rsigma1(5,4)=-ss
	Rsigma1(5,5)=cc
	Rsigma1(6,1)=ss*cc
	Rsigma1(6,2)=-ss*cc
	Rsigma1(6,6)=cc*cc-ss*ss
	
	RsigmaT1(1,1)=cc*cc
	RsigmaT1(1,2)=ss*ss
	RsigmaT1(1,6)=ss*cc
	RsigmaT1(2,1)=ss*ss
	RsigmaT1(2,2)=cc*cc
	RsigmaT1(2,6)=-ss*cc
	RsigmaT1(3,3)=1
	RsigmaT1(4,4)=cc
	RsigmaT1(4,5)=-ss
	RsigmaT1(5,4)=ss
	RsigmaT1(5,5)=cc
	RsigmaT1(6,1)=-2*ss*cc
	RsigmaT1(6,2)=2*ss*cc
	RsigmaT1(6,6)=cc*cc-ss*ss
	
	*moper,stiffnessp1,Rsigma1,mult,stiffness1
	*moper,stiffnessp1,stiffnessp1,mult,RsigmaT1
	
	c11=stiffnessp1(1,1)
	c12=stiffnessp1(1,2)
	c13=stiffnessp1(1,3)
	c16=stiffnessp1(1,6)
	c21=stiffnessp1(2,1)
	c22=stiffnessp1(2,2)
	c23=stiffnessp1(2,3)
	c26=stiffnessp1(2,6)
	c31=stiffnessp1(3,1)
	c32=stiffnessp1(3,2)
	c33=stiffnessp1(3,3)
	c36=stiffnessp1(3,6)
	c44=stiffnessp1(4,4)
	c45=stiffnessp1(4,5)
	c54=stiffnessp1(5,4)
	c55=stiffnessp1(5,5)
	c61=stiffnessp1(6,1)
	c62=stiffnessp1(6,2)
	c63=stiffnessp1(6,3)
	c66=stiffnessp1(6,6)	
	
	*Get, nmate1, MAT, 0, COUNT
	layupm1(i)=nmate1+1
	
	*do, j, 1, i-1
		*if, layupa1(i), eq, layupa1(j), then
			layupm1(i)=layupm1(j)
		*endif
	*enddo
	TB,ANEL,layupm1(i)
	TBDATA,1 ,c11,c12,c13,c16,0,0
	TBDATA,7 ,c22,c23,c26,0,0,c33
	TBDATA,13,c36,0,0,c66,0,0
	TBDATA,19,c44,c45,c55
	mp, dens, layupm1(i), rho
*enddo


! Bottom face sheet information
!---------------------------------
matbot=AR11
tbot=AR13

*DEL,  layup2
*DEL, layupm2
*DEL, layupa2
*DEL, layupt2         

*DIM,  layup2, String, 200
*DIM, layupm2, ARRAY, 10000     ! Store layup material
*DIM, layupa2, ARRAY, 10000     ! Store layup angle
*DIM, layupt2, ARRAY, 10000

layup2(1) = AR12

L= Strleng(layup2(1))
e= Strpos(layup2(1),']')
s= Strpos(layup2(1),'s')
*IF, s, NE, 0, THEN
m= Valchr(Strsub(layup2(1),e+1,s-(e+1)))
n= Valchr(Strsub(layup2(1),s+1,L-s))
*ELSE
m= Valchr(Strsub(layup2(1),e+1,L-e))
*ENDIF

! Check the layup format
input_left= Strsub(layup2(1),1,1)
input_right= Strsub(layup2(1),e,1)
*IF, input_left, ne,'[', or, input_right, ne,']', THEN
*MSG,ERROR
Layup format is wrong,%/&
Please recheck and carry on analysis!
/EOF
*ENDIF
			
sum=0
temp=strpos(layup2(1),']')
L= Strleng(layup2(1))
layup2(1)=strsub(layup2(1),2,L)
*dowhile, temp
	L= Strleng(layup2(1))
	pos= strpos(layup2(1),'/')
	sum=sum+1
	*if, pos, gt, 0 ,then
		layupa2(sum)=valchr(strsub(layup2(1),1, pos-1))
	*endif
	*if, pos, eq, 0, then
		pos= strpos(layup2(1),']')
		layupa2(sum)=valchr(strsub(layup2(1),1, pos-1))
	*endif
	layup2(1)=strsub(layup2(1),pos+1,L)
	temp=strpos(layup2(1),']')	
*enddo
	
layupn2= sum      !total # of layup (total # of lamina)
*IF, m, EQ, 0, THEN
	m=1
*ENDIF
*IF, n, EQ, 0, THEN
	n=1
*ENDIF

! Repetition before symmetry
*IF, m, GT, 1, THEN
	*DO, i, 1, m-1
		*DO, j, 1, layupn2
			layupa2(j+i*layupn2)= layupa2(j)  ! Array to store layup angle from 1 to layupn
		*ENDDO
	*ENDDO
	layupn2= layupn2*m
*ENDIF

! Symmetry
*IF, s, NE, 0, THEN
	*DO, i, 1, layupn2
		layupa2(i+layupn2)= layupa2(layupn2-(i-1))  
	*ENDDO
	layupn2= layupn2*2
*ENDIF

! Repetition after symmetry
*IF, n, GT, 1, THEN
	*DO, i, 1, n-1
		*DO, j, 1, layupn2
			layupa2(j+i*layupn2)= layupa2(j)  ! Array to store layup angle from 1 to layupn
		*ENDDO
	*ENDDO
	layupn2= layupn2*n
*ENDIF

*DO, i, 1, layupn2
	layupm2(i)= matbot
	layupt2(i)= tbot
*ENDDO

*get, E1,  EX,   matbot
*get, E2,  EY,   matbot
*get, E3,  EZ,   matbot
*get, G13, GXZ,  matbot
*get, G12, GXY,  matbot
*get, G23, GYZ,  matbot
*get, v12, PRXY, matbot
*get, v13, PRXZ, matbot
*get, v23, PRYZ, matbot
*get, rho, DENS, matbot

*DEL, compliance2   
*DEL,  stiffness2  
*DIM, compliance2 , ARRAY, 6,6
*DIM,  stiffness2 , ARRAY, 6,6

*do, i, 1, 6
	*do, j, 1, 6
		compliance2(i,j)=0
	*enddo
*enddo
compliance2(1,1)=1/E1
compliance2(2,2)=1/E2
compliance2(3,3)=1/E3
compliance2(1,2)=-v12/E1
compliance2(1,3)=-v13/E1
compliance2(2,3)=-v23/E2
compliance2(2,1)=compliance2(1,2)
compliance2(3,1)=compliance2(1,3)
compliance2(3,2)=compliance2(2,3)
compliance2(4,4)=1/G23
compliance2(5,5)=1/G13
compliance2(6,6)=1/G12

*moper,stiffness2,compliance2,invert

temp=0
*do, i, 1, layupn2

	*DEL,     Rsigma2
	*DEL,    RsigmaT2
	*DEL, stiffnessp2
	*DIM,     Rsigma2, ARRAY, 6,6
	*DIM,    RsigmaT2, ARRAY, 6,6
	*DIM, stiffnessp2, ARRAY, 6,6
	
	*do, j, 1, 6
		*do, kk, 1, 6
			Rsigma2(j,kk)=0
		*enddo
	*enddo
	
	cc=cos(Pi*layupa2(i)/180)
	ss=sin(Pi*layupa2(i)/180)
	
	Rsigma2(1,1)=cc*cc
	Rsigma2(1,2)=ss*ss
	Rsigma2(1,6)=-2*ss*cc
	Rsigma2(2,1)=ss*ss
	Rsigma2(2,2)=cc*cc
	Rsigma2(2,6)=2*ss*cc
	Rsigma2(3,3)=1
	Rsigma2(4,4)=cc
	Rsigma2(4,5)=ss
	Rsigma2(5,4)=-ss
	Rsigma2(5,5)=cc
	Rsigma2(6,1)=ss*cc
	Rsigma2(6,2)=-ss*cc
	Rsigma2(6,6)=cc*cc-ss*ss
	
	RsigmaT2(1,1)=cc*cc
	RsigmaT2(1,2)=ss*ss
	RsigmaT2(1,6)=ss*cc
	RsigmaT2(2,1)=ss*ss
	RsigmaT2(2,2)=cc*cc
	RsigmaT2(2,6)=-ss*cc
	RsigmaT2(3,3)=1
	RsigmaT2(4,4)=cc
	RsigmaT2(4,5)=-ss
	RsigmaT2(5,4)=ss
	RsigmaT2(5,5)=cc
	RsigmaT2(6,1)=-2*ss*cc
	RsigmaT2(6,2)=2*ss*cc
	RsigmaT2(6,6)=cc*cc-ss*ss
	
	*moper,stiffnessp2,Rsigma2,mult,stiffness2
	*moper,stiffnessp2,stiffnessp2,mult,RsigmaT2
	
	c11=stiffnessp2(1,1)
	c12=stiffnessp2(1,2)
	c13=stiffnessp2(1,3)
	c16=stiffnessp2(1,6)
	c21=stiffnessp2(2,1)
	c22=stiffnessp2(2,2)
	c23=stiffnessp2(2,3)
	c26=stiffnessp2(2,6)
	c31=stiffnessp2(3,1)
	c32=stiffnessp2(3,2)
	c33=stiffnessp2(3,3)
	c36=stiffnessp2(3,6)
	c44=stiffnessp2(4,4)
	c45=stiffnessp2(4,5)
	c54=stiffnessp2(5,4)
	c55=stiffnessp2(5,5)
	c61=stiffnessp2(6,1)
	c62=stiffnessp2(6,2)
	c63=stiffnessp2(6,3)
	c66=stiffnessp2(6,6)	
	
	*Get, nmate2, MAT, 0, COUNT
	layupm2(i)=nmate2+1
	
	*do, j, 1, i-1
		*if, layupa2(i), eq, layupa2(j), then
			layupm2(i)=layupm2(j)
		*endif
	*enddo
	*do, j, 1, layupn1
		*if, layupa2(i), eq, layupa1(j), then
			layupm2(i)=layupm1(j)
		*endif
	*enddo
	TB,ANEL,layupm2(i)
	TBDATA,1 ,c11,c12,c13,c16,0,0
	TBDATA,7 ,c22,c23,c26,0,0,c33
	TBDATA,13,c36,0,0,c66,0,0
	TBDATA,19,c44,c45,c55
	mp, dens, layupm2(i), rho
*enddo



! Modeling
!---------------------------------
! The largest x coordinate
xlargest= l2+l1*cost+tc*sint+l2
! The largest y coordinate
ylargest= tc-tc*cost+l1*sint+tc
! Total thickness of top face sheet
ttopt=layupn1*ttop
! Total thickness of bottom face sheet
tbott=layupn2*tbot
! Total height
height=hc+ttopt+tbott
! Height of first top face sheet
ht=height/2-ttopt
! Height of first bottom face sheet
hb=height/2-tbott
k, 1, xlargest,            0,           height/2
k, 2, xlargest,            tc,          height/2
                                            
k, 3, xlargest-l2-tc/tant, 0,           height/2
k, 4, xlargest-l2,         tc,          height/2 
                                            
k, 5, l2,                  ylargest-tc, height/2 
k, 6, l2+tc/tant,          ylargest,    height/2 
                                        
k, 7, 0,                   ylargest-tc, height/2 
k, 8, 0,                   ylargest,    height/2  

k, 9,  0, 0,  height/2
k, 10, 0, 0, -height/2

l, 1, 2
l, 2, 4
l, 4, 6
l, 6, 8
l, 8, 7
l, 7, 5
l, 5, 3
l, 3, 1
l, 4, 3
l, 6, 5

l, 9, 10

al, 1, 2, 9, 8
al, 9, 3, 10, 7
al, 10, 4, 5, 6


vdrag,all,,,,,,11

temp=0
*do, i, 1, layupn1
	block, 0, xlargest, 0, ylargest, ht+temp, ht+layupt1(i)+temp
	temp=temp+layupt1(i)
*enddo

temp=0
*do, i, 1, layupn2
	block, 0, xlargest, 0, ylargest, -hb-temp, -hb-layupt2(i)-temp
	temp=temp+layupt2(i)
*enddo

vovlap,all

NUMMRG, ALL
NUMCMP, ALL

! Meshing 
!---------------------------------
et,1,186

small = tc

*if, ttop, lt, small, then
	small = ttop
*endif

*if, tbot, lt, small, then
	small = tbot
*endif 

esize,small*6

lsel,s,loc,z,0
lesize,all,,,60



*if, hc, gt, 0, then
	vsel,s,loc,z,-hb,ht
	vatt,1
*endif

temp=0
*do, i, 1, layupn1
	vsel,s,loc,z,ht+temp, ht+layupt1(i)+temp
	temp=temp+layupt1(i)
	vatt,layupm1(i)
*enddo

temp=0
*do, i, 1, layupn2
	vsel,s,loc,z,-hb-temp, -hb-layupt2(i)-temp
	temp=temp+layupt2(i)
	vatt,layupm2(i)
*enddo

allsel
vmesh,all

allsel
NUMMRG, ALL
NUMCMP, ALL
vsym,x,all
vsym,y,all
NUMMRG, ALL
NUMCMP, ALL

eplot

*endif


! Only core, not considering face sheets
*if, L, eq, 0, then

! Modeling


! Double thickness wall
*if, walltype, eq, 1, then
!---------------------------------
! The largest x coordinate
xlargest= l2+l1*cost+tc*sint+l2
! The largest y coordinate
ylargest= tc-tc*cost+l1*sint+tc
height=hc

k,  1, xlargest           ,           0,          height/2
k,  2, xlargest           ,          tc,          height/2
                                                          
k,  3, xlargest-l2-tc/tant,           0,          height/2
k,  4, xlargest-l2        ,          tc,          height/2
                                                          
k,  5, l2                 , ylargest-tc,          height/2
k,  6, l2+tc/tant         ,    ylargest,          height/2
                                                          
k,  7, 0                  , ylargest-tc,          height/2
k,  8, 0                  ,    ylargest,          height/2 
                                                             
k,  9, 0                  ,           0,          height/2
k, 10, 0                  ,           0,         -height/2

l, 1, 2
l, 2, 4
l, 4, 6
l, 6, 8
l, 8, 7
l, 7, 5
l, 5, 3
l, 3, 1
l, 4, 3
l, 6, 5

l, 9, 10

al, 1, 2, 9, 8
al, 9, 3, 10, 7
al, 10, 4, 5, 6


vdrag,all,,,,,,11

*endif




*if, walltype, eq, 2, then
!---------------------------------
! The largest x coordinate
xlargest= l2+l1*cost+tc*sint+l2
! The largest y coordinate
ylargest= tc-tc*cost+l1*sint
height=hc

k,  1, xlargest,                		   0,         height/2
k,  2, xlargest,               		    tc/2,         height/2
                                             
k,  3, xlargest-l2-tc/(2*cott),  		   0,         height/2
k,  4, xlargest-l2,              	    tc/2,         height/2 
                                             
k,  5, l2,                      ylargest-tc/2,         height/2 
k,  6, l2+tc/(2*cott),          	 ylargest,         height/2 
                                         
k,  7, 0,                       ylargest-tc/2,         height/2 
k,  8, 0,                            ylargest,         height/2  
    
k,  9, 0,                                  0,          height/2
k, 10, 0,                                  0,          -height/2

l, 1, 2
l, 2, 4
l, 4, 6
l, 6, 8
l, 8, 7
l, 7, 5
l, 5, 3
l, 3, 1
l, 4, 3
l, 6, 5

l, 9, 10

al, 1, 2, 9, 8
al, 9, 3, 10, 7
al, 10, 4, 5, 6




vdrag,all,,,,,,11

*endif




! Meshing 
!---------------------------------
et,1,186

lsel,s,length, ,0,2*tc
lesize,all,,,2

lsel,s,length, ,l1,l1*1.5
lesize,all,,,60

lsel,s,length, ,l2
lesize,all,,,30

lsel,s,loc,z,0
lesize,all,,,80


!lsel,s,loc,z,10
!lsel,a,loc,z,-10
!lesize,all,tc
!
!lsel,s,loc,z,0
!lesize,all,tc*5

!esize,tc


allsel
vmesh,all

allsel
NUMMRG, ALL
NUMCMP, ALL
vsym,x,all
vsym,y,all
NUMMRG, ALL
NUMCMP, ALL

eplot

*endif 